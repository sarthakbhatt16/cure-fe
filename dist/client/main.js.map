{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_helpers/error-interceptor.service.ts","webpack:///./src/app/_helpers/jwt-interceptor.service.ts","webpack:///./src/app/_services/alert.service.ts","webpack:///./src/app/alert/alert.component.css","webpack:///./src/app/alert/alert.component.html","webpack:///./src/app/alert/alert.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\",\n\t\t\"common\",\n\t\t\"home-home-module\"\n\t],\n\t\"./login/login.module\": [\n\t\t\"./src/app/login/login.module.ts\",\n\t\t\"login-login-module\"\n\t],\n\t\"./register/register.module\": [\n\t\t\"./src/app/register/register.module.ts\",\n\t\t\"common\",\n\t\t\"register-register-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      if (localStorage.getItem('currentUser')) {\n        // logged in so return true\n        return true;\n      }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptorService implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // extract error message from http body if an error occurs\n    return next.handle(request)\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          return throwError(error.error);\n        })\n      );\n  }\n}\n\nexport const ErrorInterceptorServiceProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: ErrorInterceptorService,\n  multi: true\n};\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // add authorization header with jwt token if available\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n\nexport const JwtInterceptorServiceProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: JwtInterceptorService,\n  multi: true,\n};\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { Router, NavigationStart } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private subject = new Subject<any>();\n  private keepAfterNavigationChange = false;\n\n  constructor(private router: Router) {\n    // clear alert message on route change\n    router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n          if (this.keepAfterNavigationChange) {\n              // only keep for a single location change\n              this.keepAfterNavigationChange = false;\n          } else {\n              // clear alert\n              this.subject.next();\n          }\n      }\n    });\n  }\n\n  success(message: string, keepAfterNavigationChange = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: 'success', text: message});\n  }\n\n  error(message: string, keepAfterNavigationChange = false) {\n    this.keepAfterNavigationChange = keepAfterNavigationChange;\n    this.subject.next({ type: 'error', text: message});\n  }\n\n  getMessage(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"message\\\" [ngClass]=\\\"{ 'alert': message, 'alert-success': message.type === 'success', 'alert-danger': message.type === 'error' }\\\">{{message.text}}</div>\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '../_services/alert.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnDestroy {\n  private subscription: Subscription;\n  message: any;\n\n  constructor(private alertService: AlertService) {\n    // subscribe to alert messages\n    this.subscription = alertService.getMessage().subscribe(message => {\n      this.message = message;\n    });\n   }\n\n  ngOnDestroy() {\n    // unsubscribe on destroy to prevent memory leaks\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './_guards/auth.guard';\n\nconst routes: Routes = [\n  { path: '', loadChildren: './home/home.module#HomeModule', canActivate: [AuthGuard] },\n  { path: 'login', loadChildren: './login/login.module#LoginModule' },\n  { path: 'register', loadChildren: './register/register.module#RegisterModule' },\n\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!-- main app container -->\\n<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"col-sm-8 col-sm-offset-2\\\">\\n      <app-alert></app-alert>\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { JwtInterceptorServiceProvider } from './_helpers/jwt-interceptor.service';\nimport { ErrorInterceptorServiceProvider } from './_helpers/error-interceptor.service';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { AlertComponent } from './alert/alert.component';\nimport { HomeComponent } from './home/home.component';\n  \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    \n  ],\n  providers: [\n    AuthGuard,\n    JwtInterceptorServiceProvider,\n    ErrorInterceptorServiceProvider\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  appConfig: {\n    apiUrl: 'http://localhost:4000'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}